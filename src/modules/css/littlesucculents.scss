/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * LittleSucculents implementation : © Emmanuel Albisser <emmanuel.albisser@gmail.com>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * littlesucculents.css
 *
 * LittleSucculents stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (littlesucculents_littlesucculents.tpl), and to HTML elements you create dynamically
    (in littlesucculents.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/

/* Note: you must not use any @import directive */

@use "imports/safeMode.scss";
@use "imports/modals.scss";
@use "imports/mixins.scss" as mix;
@use "imports/variables.scss" as var;
@use "imports/generics.scss";
@use "imports/turnCounter.scss";
@use "../../../node_modules/bga-cards/src/bga-cards.scss";

%shadow {
  box-shadow: 2px 2px 6px -1px #000;
  -webkit-box-shadow: 2px 2px 6px -1px #000; /* Safari 3-4, iOS 4.0.2 - 4.2, Android 2.3+ */
  -moz-box-shadow: 2px 2px 6px -1px #000;
}

#ebd-body.two-players {
  #board {
    position: relative;
    @include mix.size(1320, 688);
    background-position-x: 50%;
    .slot {
      &[data-slot-id="plant2"] {
        left: 1.5%;
      }
      &[data-slot-id="plant1"] {
        left: 26.3%;
      }
      &[data-slot-id="pot1"] {
        left: 51.1%;
      }
      &[data-slot-id="pot2"] {
        left: 75.9%;
      }
      &[data-slot-id="plant3"] {
        display: none;
      }
      &[data-slot-id="pot3"] {
        display: none;
      }
    }
  }
}

#generalactions {
  display: inline-flex;
}
#droplets {
  display: inline-flex;
  .token {
    position: relative;
    display: inline-block;
    margin-left: 10px;
  }
}

#visibleDeck .slot {
  @include mix.size(300, 500);
}

.token.flower {
  @include mix.size(150, 150);
  background-image: url(img/tokens2.png);
  box-shadow: 0 2px black;
  border-radius: 100%;
  border: 1px solid black;
  z-index: 2;
  position: absolute;
  left: 25%;
  bottom: mix.addScale(-75);
  &.blue {
    @include mix.getBackgroundPosition(4, 3, 3);
  }
  &.green {
    @include mix.getBackgroundPosition(5, 3, 3);
  }
  &.orange {
    @include mix.getBackgroundPosition(6, 3, 3);
  }
  &.pink {
    @include mix.getBackgroundPosition(7, 3, 3);
  }
  &.red {
    @include mix.getBackgroundPosition(8, 3, 3);
  }
  &.yellow {
    @include mix.getBackgroundPosition(9, 3, 3);
  }
}

#deckplant,
#deckpot,
#water {
  &::before {
    border-radius: mix.addScale(20);
    content: "";
    top: 2.5%;
    right: 2.5%;
    bottom: 2.5%;
    left: 2.5%;
    position: absolute;
    background-image: url(img/cards.jpg);
    filter: grayscale(1);
  }
}

.card {
  @include mix.size(300, 415);
  border-radius: mix.addScale(20);
  position: absolute;
  .card-sides {
    border-radius: inherit;
    .card-side {
      border-radius: inherit;
      background-image: url(img/cards.jpg);
    }

    .back {
      @include mix.getBackgroundPosition(20);
    }
    .front {
      overflow: visible;
      @include mix.createBackGroundForMap(var.$imageList);
      .title {
        font-family: var.$title-font;
        position: absolute;
        display: flex;
        width: 100%;
        text-align: center;
        padding-left: 10%;
        padding-right: 10%;
        width: 80%;
        top: 5%;
        font-size: mix.addScale(40);
      }
      .text {
        font-family: var.$main-font;
        position: absolute;
        display: flex;
        width: 100%;
        height: 100%;
        @include mix.textBorder(white);
        align-items: center;
        justify-content: center;
        text-align: center;
        font-size: mix.addScale(30);
        bottom: mix.addScale(12);
      }
      .size {
        font-family: var.$main-font;
        position: absolute;
        top: 5%;
        right: 0;
        font-size: mix.addScale(60);
      }
    }
  }
  &.plant {
    .token .sides {
      transform: rotateY(0deg);
    }
  }
  &:hover {
    // .token {
    //   opacity: 0.2;
    //   transition: top 1s 0.3s, left 1s 0.3s, opacity 0.3s 0.5s;
    // }
  }
  .token {
    transition: top 1s 0.3s, left 1s 0.3s;
  }
}

.token:not(.flower) {
  @include mix.size(80, 80);
  position: absolute;
  z-index: 2;
  border-radius: 100%;

  $placeList: 1 72% 54%, 2 49% 59%, 3 26% 59%, 4 1% 52%, 5 -7% 25%, 6 5% 63%,
    7 69% 67%, 8 76% 36%, 9 65% 21%, 10 22% 69%, 11 77% 8%, 12 11% -3%,
    13 1% 10%, 14 63% -5%, 15 0% 80%, 16 20% 80%, 17 54% 77%, 18 75% 81%;
  @each $index, $left, $top in $placeList {
    &[data-place-id="#{$index}"] {
      left: #{$left};
      top: #{$top};
    }
  }

  .sides {
    transform: rotateY(180deg);
    transition: transform 1s 0.3s;
    box-sizing: border-box;
    transform-style: preserve-3d;
    height: 100%;
    box-shadow: mix.addScale(0) mix.addScale(5) black;
    border-radius: 100%;
    border: 1px solid black;
    .side {
      position: absolute;
      width: 100%;
      height: 100%;
      backface-visibility: hidden;
      transform-style: preserve-3d;
      border-radius: 100%;
      &.front {
        background-image: url(img/tokens2.png);
        background-color: white;
        @include mix.getBackgroundPosition(1, 3, 3);
      }
      &.back {
        transform: rotateY(180deg);
        background-image: url(img/tokens2.png);
        background-color: white;
        @include mix.getBackgroundPosition(2, 3, 3);
      }
    }
  }
  &.trashed {
    top: 1500px;
    left: 1500px;
  }
  &.selectable .sides .side {
    &.front,
    &.back {
      background-color: rgb(158, 250, 163);
    }
  }
  &.selected .sides .side {
    &.front,
    &.back {
      background-color: rgb(131, 151, 241);
    }
  }
}

.slot {
  @extend .card;
  position: relative;
  > .token {
    position: absolute;
    left: 25%;
    bottom: 0;
  }
}

#board-container {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: stretch;
  padding-bottom: 5px;
  flex-wrap: wrap;
  width: 100%;
  gap: mix.addScale(20);
  .lsu-row {
    display: flex;
    justify-content: space-around;
    align-items: center;
  }
  .deck {
    @extend .card;
    position: relative;
  }
  #board {
    position: relative;
    @include mix.size(1977, 688);
    background-image: url(img/board.jpg);
    background-size: cover;
    border-radius: mix.addScale(20);
    @extend %shadow;
    .slot {
      position: absolute;
      top: 4.1%;
      &[data-slot-id="plant3"] {
        left: 1%;
      }
      &[data-slot-id="plant2"] {
        left: 17.65%;
      }
      &[data-slot-id="plant1"] {
        left: 34.3%;
      }
      &[data-slot-id="pot1"] {
        left: 50.9%;
      }
      &[data-slot-id="pot2"] {
        left: 67.55%;
      }
      &[data-slot-id="pot3"] {
        left: 84.2%;
      }
    }
  }
  #water {
    &::before {
      @include mix.getBackgroundPosition(44);
    }
    .card .back {
      filter: grayscale(1);
      @include mix.getBackgroundPosition(44);
    }
  }
  #deckplant {
    &::before {
      @include mix.getBackgroundPosition(20);
    }
    .card .back {
      @include mix.getBackgroundPosition(20);
    }
  }
  #deckpot {
    &::before {
      @include mix.getBackgroundPosition(42);
    }
    .card .back {
      @include mix.getBackgroundPosition(42);
    }
  }

  #waterboard {
    &::before {
      position: absolute;
      bottom: 100%;
      width: 100%;
      font-size: mix.addScale(30);
      font-family: var.$main-font;
      @include mix.textBorder(white);
      content: attr(data-label);
    }
  }
}
#table {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: mix.addScale(20);
  .succulents-gamezone {
    width: 95%;
    border-radius: mix.addScale(20);
    border-width: 2px;
    border-style: solid;
    .gamezone-cards {
      height: calc(mix.addScale(calc(419 * 2)) + 8px);
      flex-direction: column-reverse;
      align-content: center;
      .slot:empty:not(.active) {
        display: none;
      }
    }
  }
}

/*
                  ████                     █████     ███                     
                 ░░███                    ░░███     ░░░                      
  █████   ██████  ░███   ██████   ██████  ███████   ████   ██████  ████████  
 ███░░   ███░░███ ░███  ███░░███ ███░░███░░░███░   ░░███  ███░░███░░███░░███ 
░░█████ ░███████  ░███ ░███████ ░███ ░░░   ░███     ░███ ░███ ░███ ░███ ░███ 
 ░░░░███░███░░░   ░███ ░███░░░  ░███  ███  ░███ ███ ░███ ░███ ░███ ░███ ░███ 
 ██████ ░░██████  █████░░██████ ░░██████   ░░█████  █████░░██████  ████ █████
░░░░░░   ░░░░░░  ░░░░░  ░░░░░░   ░░░░░░     ░░░░░  ░░░░░  ░░░░░░  ░░░░ ░░░░░ 
                                                                             
                                                                             
                                                                             
*/
.bga-cards_selectable-card {
  .card-side.front::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(30, 221, 39, 0.315);
  }
  &.bga-cards_selected-card {
    border: 3px green solid;
  }
}

//for decks or slots
.selectable:not(.token) {
  box-sizing: border-box;
  border: 3px blue solid;
  background-color: rgba(30, 65, 221, 0.315);
  cursor: pointer;
}
.unselectable {
  cursor: not-allowed;
}

.notif_startAction,
.notif_startWater {
  .roundedbox {
    font-family: var.$main-font;
    border: 2px rgb(119, 119, 119) solid;
    text-align: center;
  }
}
/*
   █████████                                          ███          
  ███░░░░░███                                        ░░░           
 ███     ░░░   ██████  ████████    ██████  ████████  ████   ██████ 
░███          ███░░███░░███░░███  ███░░███░░███░░███░░███  ███░░███
░███    █████░███████  ░███ ░███ ░███████  ░███ ░░░  ░███ ░███ ░░░ 
░░███  ░░███ ░███░░░   ░███ ░███ ░███░░░   ░███      ░███ ░███  ███
 ░░█████████ ░░██████  ████ █████░░██████  █████     █████░░██████ 
  ░░░░░░░░░   ░░░░░░  ░░░░ ░░░░░  ░░░░░░  ░░░░░     ░░░░░  ░░░░░░  
                                                                  
*/
.animate-on-transforms {
  transition: all 0.5s 0.5s;
}

.inline-icon {
  display: inline-block;
  line-height: normal;
  width: 1.5em;
  height: 1.5em;
  background-image: url(img/icons.png);
  position: relative;
  vertical-align: bottom;
  margin-left: -0.5em;
  &.icon-money {
    @include mix.getIcon(1);
  }
  &.icon-vp {
    @include mix.getIcon(2);
  }
  &.icon-leaf {
    @include mix.getIcon(3);
  }
  &.icon-water {
    @include mix.getIcon(4);
  }
}
.id_number {
  display: none;
}

#ebd-body.debug {
  & .card:hover .id_number {
    font-size: 1.2em;
    position: absolute;
    bottom: 0;
    right: 0;
    font-weight: 700;
    background-color: #fff;
    display: block;
    &::before {
      content: "ID:";
    }
  }
}

#LSU_caution {
  -webkit-transition: max-height 0.5s, padding 0.5s;
  -moz-transition: max-height 0.5s, padding 0.5s;
  -ms-transition: max-height 0.5s, padding 0.5s;
  -o-transition: max-height 0.5s, padding 0.5s;
  transition: max-height 0.5s, padding 0.5s;
  &:empty {
    max-height: 0;
    padding: 0;
  }

  &:not(:empty)::before {
    content: "\2716";
    height: 20px;
    width: 20px;
    position: absolute;
    right: 10px;
  }
  max-height: 30px;
  background-color: red;
  border-radius: 5px;
  padding: 5px;
  margin: 5px;
  font-weight: 600;
  text-align: center;
}

//for displaying idNumber in debug mode
.id_number {
  display: none;
}

#game_play_area.debug {
  & .card:hover .id_number {
    font-size: 1.2em;
    position: absolute;
    bottom: 0;
    left: 0;
    font-weight: 700;
    background-color: #fff;
    display: block;
    &::before {
      content: "ID:";
    }
  }
}

//empty deck
.empty {
  filter: grayscale(100%);
  &::before {
    background-color: rgba(241, 240, 240, 0.25);
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
  }
}

.player-infos {
  display: flex;
  align-items: center;
  flex-direction: row;
  margin: 5px;
  justify-content: flex-start;

  #firstPlayer {
    width: 40px;
    height: 40px;
    background-image: url(img/tokens2.png);
    box-shadow: 0 2px black;
    border-radius: 100%;
    border: 1px solid black;
    @include mix.getBackgroundPosition(3, 3, 3);
  }

  .counter {
    display: inline-flex;
    align-items: center;
    text-align: center;
    font-size: 1.5em;
    font-family: var.$main-font;
    margin-right: 0.5em;

    &.water-counter::before {
      background: url(img/cards.jpg);
      @include mix.getBackgroundPosition(43);

      width: 30px;
      height: 41px;
    }

    &:before {
      background: url("img/icons.png");
      content: "";
      display: block;
      background-size: cover;
      width: 30px;
      height: 30px;
      float: left;
    }
  }
}

.rewards-counter:after {
  background: url(img/icons.png);
  content: "";
  display: inline-block;
  background-size: cover;
  width: 20px;
  height: 20px;
  top: 4px;
  position: relative;
  background-position: 100%;
}

.deckinfo {
  background: #fff;
  border: 2px solid rgb(80, 57, 9);
  border-radius: 50%;
  color: rgb(80, 57, 9);
  overflow: visible;
  padding: 1px 2px 0px 1px;
  position: absolute;
  text-align: center;
  bottom: 4%;
  left: 2%;
  z-index: 99;
}
//                                         ████
//                                        ░░███
//  ██████  █████ █████  ██████  ████████  ░███   ██████   █████ ████
// ███░░███░░███ ░░███  ███░░███░░███░░███ ░███  ░░░░░███ ░░███ ░███
//░███ ░███ ░███  ░███ ░███████  ░███ ░░░  ░███   ███████  ░███ ░███
//░███ ░███ ░░███ ███  ░███░░░   ░███      ░███  ███░░███  ░███ ░███
//░░██████   ░░█████   ░░██████  █████     █████░░████████ ░░███████
// ░░░░░░     ░░░░░     ░░░░░░  ░░░░░     ░░░░░  ░░░░░░░░   ░░░░░███
//                                                          ███ ░███
//                                                         ░░██████
//                                                          ░░░░░░

#card-overlay {
  opacity: 0;
  position: fixed;
  width: 100%;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.3);
  top: 0;
  left: 0;
  z-index: 4000;
  pointer-events: none;
  transition: opacity 600ms;
  display: flex;
  align-items: center;
  justify-content: center;
}

#card-overlay.active {
  opacity: 1;
  pointer-events: none;
}
